{
  "name": "Mustache (HTML)",
  "scopeName": "source.mustache",
  "fileTypes": ["mustache"],
  "uuid": "93706aaa-9b66-4e9e-bb64-31a8ffcfb00d",
  "foldingStartMarker": "(?x)\n\t\t(<(?i:head|body|table|thead|tbody|tfoot|tr|div|select|fieldset|style|script|ul|ol|form|dl)\\b.*?>\n\t\t|<!--(?!.*-->)\n\t\t|\\{\\s*($|\\?>\\s*$|//|/\\*(.*\\*/\\s*$|(?!.*?\\*/)))\n\t\t)",
  "foldingStopMarker": "(?x)\n\t\t(</(?i:head|body|table|thead|tbody|tfoot|tr|div|select|fieldset|style|script|ul|ol|form|dl)>\n\t\t|^\\s*-->\n\t\t|(^|\\s)\\}\n\t\t)",

  "patterns": [
    {
      "comment": "Comment",
      "begin": "\\{\\{!",
      "end": "\\}\\}",
      "name": "comment.block.mustache"
    },
    {
      "comment": "Escaped Variable",
      "begin": "{{(?=\\s*>)",
      "captures": {
        "0": {
          "name": "storage.type"
        }
      },
      "end": "}}",
      "patterns": [
        {
          "match": "\\.",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        },
        {
          "match": ">",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        },
        {
          "match": "[-a-zA-Z0-9_]+",
          "name": "constant.character.escape"
        },
        {
          "match": "\\(*[-a-zA-Z0-9_]+\\)*",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        }
      ],
      "name": "constant.character.escape"
    },
    {
      "comment": "Section",
      "begin": "{{(?=\\s*#)",
      "captures": {
        "0": {
          "name": "storage.type"
        }
      },
      "end": "}}",
      "patterns": [
        {
          "match": "\\.",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        },
        {
          "match": "#",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        },
        {
          "match": "[-a-zA-Z0-9_]+",
          "name": "constant.character.escape"
        }
      ],
      "name": "constant.character.escape"
    },
    {
      "comment": "Section End",
      "begin": "{{(?=\\s*/)",
      "captures": {
        "0": {
          "name": "storage.type"
        }
      },
      "end": "}}",
      "patterns": [
        {
          "match": "\\.",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        },
        {
          "match": "/",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        },
        {
          "match": "[-a-zA-Z0-9_]+",
          "name": "constant.character.escape"
        }
      ],
      "name": "constant.character.escape"
    },
    {
      "comment": "Inverted Section",
      "begin": "{{(?=\\s*\\^)",
      "captures": {
        "0": {
          "name": "storage.type"
        }
      },
      "end": "}}",
      "patterns": [
        {
          "match": "\\.",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        },
        {
          "match": "\\^",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        },
        {
          "match": "[-a-zA-Z0-9_]+",
          "name": "constant.character.escape"
        }
      ],
      "name": "constant.character.escape"
    },
    {
      "comment": "Unescaped Variable Ampersand",
      "begin": "{{(?=\\s*\\&)",
      "captures": {
        "0": {
          "name": "storage.type"
        }
      },
      "end": "}}",
      "patterns": [
        {
          "match": "\\.",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        },
        {
          "match": "\\&",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        },
        {
          "match": "[-a-zA-Z0-9_]+",
          "name": "constant.character.escape"
        },
        {
          "match": "\\(*[-a-zA-Z0-9_]+\\)*",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        }
      ],
      "name": "constant.character.escape"
    },
    {
      "comment": "Unescaped Variable",
      "begin": "{{{",
      "captures": {
        "0": {
          "name": "storage.type"
        }
      },
      "end": "}}}",
      "patterns": [
        {
          "match": "\\.",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        },
        {
          "match": "[-a-zA-Z0-9_]+",
          "name": "constant.character.escape"
        },
        {
          "match": "\\(.+\\)",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        }
      ],
      "name": "constant.character.escape"
    },
    {
      "comment": "Escaped Variable",
      "begin": "{{",
      "captures": {
        "0": {
          "name": "storage.type"
        }
      },
      "end": "}}",
      "patterns": [
        {
          "match": "\\.",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        },
        {
          "match": "[-a-zA-Z0-9_]+",
          "name": "constant.character.escape"
        },
        {
          "match": "\\(*[-a-zA-Z0-9_]+\\)*",
          "name": "support.constant.mustache punctuation.definition.section.end.begin.bracket.curly.mustache"
        }
      ],
      "name": "constant.character.escape"
    },
    {
      "include": "text.html.basic"
    }
  ]
}
